{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\germa\\\\Documents\\\\GitHub\\\\internship-Aug22\\\\teams\\\\Team BASIC\\\\Quotes-App\\\\Reactjs FE\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport \"./home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: []\n    };\n  }\n\n  componentDidMount() {\n    const getRandomQuote = (data, day) => {\n      if (localStorage.getItem(\"date\") == null || sessionStorage.getItem(\"quote\") == null) {\n        let count = data.length;\n        const randomQuote = data[Math.floor(Math.random() * count)];\n        localStorage.setItem(\"date\", day);\n        sessionStorage.setItem(\"quote\", JSON.stringify(randomQuote));\n        return randomQuote;\n      }\n\n      console.log(JSON.parse(sessionStorage.getItem(\"quote\")));\n      return JSON.parse(sessionStorage.getItem(\"quote\"));\n    };\n\n    let url = \"https://quote-api-app.herokuapp.com/quote\";\n    fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      const now = new Date();\n      const day = now.getDate();\n      this.setState({\n        quotes: [getRandomQuote(data, day)]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Quotes\",\n        id: \"Quotes\",\n        children: this.state.quotes.map(x => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Quote-box\",\n            className: \"Quote-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: x.quote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Subox\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"Author-name\",\n                children: [\"-\", x.author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"likes\",\n                children: x.likes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\nexport default Home;","map":{"version":3,"names":["React","Component","Home","constructor","props","state","quotes","componentDidMount","getRandomQuote","data","day","localStorage","getItem","sessionStorage","count","length","randomQuote","Math","floor","random","setItem","JSON","stringify","console","log","parse","url","fetch","then","response","json","now","Date","getDate","setState","render","map","x","quote","author","likes"],"sources":["C:/Users/germa/Documents/GitHub/internship-Aug22/teams/Team BASIC/Quotes-App/Reactjs FE/src/components/Home.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./home.css\";\r\n\r\nexport class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quotes: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  \r\n    const getRandomQuote = (data, day) => {\r\n      if (\r\n        localStorage.getItem(\"date\") == null || sessionStorage.getItem(\"quote\") == null\r\n      ) {\r\n        let count = data.length\r\n        const randomQuote = data[Math.floor(Math.random() * count)];\r\n        \r\n        localStorage.setItem(\"date\", day);\r\n        sessionStorage.setItem(\"quote\", JSON.stringify(randomQuote));\r\n\r\n        return randomQuote;\r\n      }\r\n      console.log(JSON.parse(sessionStorage.getItem(\"quote\")));\r\n      return JSON.parse(sessionStorage.getItem(\"quote\"));\r\n    };\r\n\r\n    let url = \"https://quote-api-app.herokuapp.com/quote\";\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n      \r\n        const now = new Date();\r\n        const day = now.getDate();\r\n        this.setState({ quotes: [getRandomQuote(data, day)] });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"Quotes\" id=\"Quotes\">\r\n          {this.state.quotes.map((x) => {\r\n            return (\r\n              <div id=\"Quote-box\" className=\"Quote-box\">\r\n                <p>{x.quote}</p>\r\n                <div className=\"Subox\">\r\n                  <p className=\"Author-name\">-{x.author}</p>\r\n                  <p className=\"likes\">{x.likes}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;;AAEA,OAAO,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;EAClCE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,MAAM,EAAE;IADG,CAAb;EAGD;;EAEDC,iBAAiB,GAAG;IAElB,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;MACpC,IACEC,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAAhC,IAAwCC,cAAc,CAACD,OAAf,CAAuB,OAAvB,KAAmC,IAD7E,EAEE;QACA,IAAIE,KAAK,GAAGL,IAAI,CAACM,MAAjB;QACA,MAAMC,WAAW,GAAGP,IAAI,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,KAA3B,CAAD,CAAxB;QAEAH,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BV,GAA7B;QACAG,cAAc,CAACO,OAAf,CAAuB,OAAvB,EAAgCC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAAhC;QAEA,OAAOA,WAAP;MACD;;MACDO,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,KAAL,CAAWZ,cAAc,CAACD,OAAf,CAAuB,OAAvB,CAAX,CAAZ;MACA,OAAOS,IAAI,CAACI,KAAL,CAAWZ,cAAc,CAACD,OAAf,CAAuB,OAAvB,CAAX,CAAP;IACD,CAdD;;IAgBA,IAAIc,GAAG,GAAG,2CAAV;IACAC,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAc;MAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACD,CAHH,EAIGF,IAJH,CAISnB,IAAD,IAAU;MAEd,MAAMsB,GAAG,GAAG,IAAIC,IAAJ,EAAZ;MACA,MAAMtB,GAAG,GAAGqB,GAAG,CAACE,OAAJ,EAAZ;MACA,KAAKC,QAAL,CAAc;QAAE5B,MAAM,EAAE,CAACE,cAAc,CAACC,IAAD,EAAOC,GAAP,CAAf;MAAV,CAAd;IACD,CATH;EAUD;;EAEDyB,MAAM,GAAG;IACP,oBACE;MAAA,uBACE;QAAK,SAAS,EAAC,QAAf;QAAwB,EAAE,EAAC,QAA3B;QAAA,UACG,KAAK9B,KAAL,CAAWC,MAAX,CAAkB8B,GAAlB,CAAuBC,CAAD,IAAO;UAC5B,oBACE;YAAK,EAAE,EAAC,WAAR;YAAoB,SAAS,EAAC,WAA9B;YAAA,wBACE;cAAA,UAAIA,CAAC,CAACC;YAAN;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAK,SAAS,EAAC,OAAf;cAAA,wBACE;gBAAG,SAAS,EAAC,aAAb;gBAAA,gBAA6BD,CAAC,CAACE,MAA/B;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAG,SAAS,EAAC,OAAb;gBAAA,UAAsBF,CAAC,CAACG;cAAxB;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF;QASD,CAVA;MADH;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAiBD;;AAzDiC;AA4DpC,eAAetC,IAAf"},"metadata":{},"sourceType":"module"}